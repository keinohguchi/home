#! /bin/sh
# Filter an input stream formatted like /etc/passwd,
# and output an office directory derived from that data.
#
# Usage:
#	passwd-to-directory < /etc/passwd > office-directory-file
#	ypcat passwd | passwd-to-directory > office-directory-file
#	niscat passwd.org_dir | password-to-directory > office-directory-file

umask 077 # Restrict temporary file access to just us

# Temporary files
PERSON=/tmp/pd.key.person.$$
OFFICE=/tmp/pd.key.office.$$
TELEPHONE=/tmp/pd.key.telephone.$$
USER=/tmp/pd.key.user.$$

# Taking care of the temp file handling
trap "exit 1" 					HUP INT PIPE QUIT TERM
trap "rm -f $PERSON $OFFICE $TELEPHONE $USER"	EXIT

# key:user
awk -F: '{ print $1 ":" $5 }' > $USER

# key:Person name
sed -e 's=/.*==' \
	-e 's=^\([^:]*\):\(.*\) \([^ ]*\)=\1:\3, \2=' <$USER | sort >$PERSON

# key:office
sed -e 's=^\([^:]*\):[^/]*/\([^/]*\)/.*$=\1:\2=' <$USER | sort >$OFFICE

# key:telephone
sed -e 's=^\([^:]*\):[^/]*/[^/]*/\([^/]*\)=\1:\2=' <$USER | sort >$TELEPHONE

# Join the entries
join -t: $PERSON $OFFICE|
join -t: - $TELEPHONE|
cut -d: -f 2-|
sort -t: -k1,1 -k2,2 -k3,3|
awk -F: '{ printf("%-39s\t%s\t%s\n", $1, $2, $3) }'
